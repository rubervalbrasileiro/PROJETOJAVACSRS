/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import conexaoBD.Conexao;
import conexaoBD.ClienteDAO;
import conexaoBD.EnderecoDAO;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import models.Cliente;
import models.Endereco;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import models.DataUtil;

/**
 *
 * @author AQUI TEM
 */
public class Cadastro extends javax.swing.JFrame {

    Filtro tbCliente = new Filtro();
    Filtro tbEndereco = new Filtro();

    /**
     * Creates new form Cadastro
     */
    public Cadastro() {
        initComponents();
        setLocationRelativeTo(null);
        DefaultTableModel tbClientes = (DefaultTableModel) jTableClientes.getModel();
        tbCliente.ResultadoFiltro();
        tbEndereco.FiltroEndereco();

        //txtCodCliente.setText(txtCodCliente);
        /*txtStatus.setText("Ativo");
        txtCidade.setText("Olinda");
        txtUF.setText("PE");
*/
    }

    private void carregarDadosCliente(int idCliente) {
        // Instanciar o DAO do cliente
        ClienteDAO clienteDAO = new ClienteDAO();

        // Obter o cliente pelo ID
        Cliente cli = clienteDAO.obterClientePorId(idCliente);

        if (cli != null) {
            // Preencher os campos de texto com os dados do cliente
            txtCodCliente.setText(String.valueOf(cli.getCod_Cliente()));
            txtStatus.setText(cli.getStatus_Cliente());
            txtNomeCliente.setText(cli.getNome_Cliente());
            txtApelido.setText(cli.getApelido_Cliente());
            txtCelular.setText(cli.getCelular());
            txtCelular_Whatsapp.setText(cli.getCelular_Whatsapp());

            // Converter a data de yyyy-MM-dd para dd/MM/yyyy antes de exibir no campo de texto
            try {
                String dataNascFormatada = DataUtil.formatarDataParaFormulario(cli.getData_Nasc());
                txtDataNasc.setText(dataNascFormatada);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao formatar a data de nascimento: " + e.getMessage());
            }

            // Selecionar o estado civil no JComboBox
            jComboBoxEstadoCivil.setSelectedItem(cli.getEstado_Civil());

            txtNomeMae.setText(cli.getNome_Mae());
            txtNomePai.setText(cli.getNome_Pai());
            txtCPF.setText(cli.getCpf_Cliente());
            txtRG.setText(cli.getRG_Cliente());
            txtCartaoSus.setText(cli.getCartao_Sus());
            txtTituloEleitoral.setText(cli.getTitulo_Eleitoral());
            txtSecaoEleitoral.setText(cli.getSecao_Eleitoral());
            txtZonaEleitoral.setText(cli.getZona_Eleitoral());
            txtDataCadastro.setText(cli.getData_Cadastro());
            jTextAreaOBS.setText(cli.getObservacao());

            // Carregar os dados do endereço
            EnderecoDAO enderecoDAO = new EnderecoDAO();
            Endereco end = enderecoDAO.obterEnderecoPorId(cli.getId_endereco());

            if (end != null) {
                txtEndereco.setText(end.getLogradouro());
                txtComplemento.setText(end.getComplemento());
                txtBairro.setText(end.getBairro());
                txtCidade.setText(end.getCidade());
                txtCEP.setText(end.getCep());
                txtUF.setText(end.getUf());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cliente não encontrado.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jpnFundo = new javax.swing.JPanel();
        btnHome = new javax.swing.JButton();
        btnCadastro = new javax.swing.JButton();
        btnAgenda = new javax.swing.JButton();
        btnFiltro = new javax.swing.JButton();
        btnSaude = new javax.swing.JButton();
        btnAdvogado = new javax.swing.JButton();
        btnRelatorio = new javax.swing.JButton();
        btnImpressao = new javax.swing.JButton();
        btnOutros = new javax.swing.JButton();
        lblCodCliente = new javax.swing.JLabel();
        txtCodCliente = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        txtStatus = new javax.swing.JTextField();
        lblNomeCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        lblApelido = new javax.swing.JLabel();
        txtApelido = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        lblWhatssap = new javax.swing.JLabel();
        lblDataNasc = new javax.swing.JLabel();
        lblEstadoCivil = new javax.swing.JLabel();
        lblCPF = new javax.swing.JLabel();
        lblRG = new javax.swing.JLabel();
        lblNomeMae = new javax.swing.JLabel();
        txtNomeMae = new javax.swing.JTextField();
        lblCartaoSUS = new javax.swing.JLabel();
        lblTituloEleitoral = new javax.swing.JLabel();
        lblNomePai = new javax.swing.JLabel();
        txtNomePai = new javax.swing.JTextField();
        lblSecaoEleitoral = new javax.swing.JLabel();
        lblZonaEleitoral = new javax.swing.JLabel();
        lblDataCadastro = new javax.swing.JLabel();
        lblOBS = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaOBS = new javax.swing.JTextArea();
        lblEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        lblBairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        lblComplemento = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        lblCidade = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblCEP = new javax.swing.JLabel();
        lblUF = new javax.swing.JLabel();
        txtUF = new javax.swing.JTextField();
        btnSalvarCadastro = new javax.swing.JButton();
        btnSaida1 = new javax.swing.JButton();
        btnAtualizarCadastro = new javax.swing.JButton();
        btnProximo = new javax.swing.JButton();
        txtCPF = new javax.swing.JFormattedTextField();
        txtCEP = new javax.swing.JFormattedTextField();
        txtCelular = new javax.swing.JFormattedTextField();
        txtCelular_Whatsapp = new javax.swing.JFormattedTextField();
        txtTituloEleitoral = new javax.swing.JFormattedTextField();
        txtSecaoEleitoral = new javax.swing.JFormattedTextField();
        txtZonaEleitoral = new javax.swing.JFormattedTextField();
        btnAnterior1 = new javax.swing.JButton();
        txtCartaoSus = new javax.swing.JFormattedTextField();
        txtRG = new javax.swing.JFormattedTextField();
        txtDataCadastro = new javax.swing.JFormattedTextField();
        txtDataNasc = new javax.swing.JFormattedTextField();
        jComboBoxEstadoCivil = new javax.swing.JComboBox<>();
        btnImprimir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tela Cadastro");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 115, 190));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jpnFundo.setBackground(new java.awt.Color(140, 197, 61));

        btnHome.setBackground(new java.awt.Color(140, 197, 61));
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/home2.png"))); // NOI18N
        btnHome.setToolTipText("Home");
        btnHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        btnCadastro.setBackground(new java.awt.Color(140, 197, 61));
        btnCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cadastro.png"))); // NOI18N
        btnCadastro.setToolTipText("Cadastrar");
        btnCadastro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastroActionPerformed(evt);
            }
        });

        btnAgenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/calendario.png"))); // NOI18N
        btnAgenda.setToolTipText("Agenda");
        btnAgenda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgendaActionPerformed(evt);
            }
        });

        btnFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/filtro.png"))); // NOI18N
        btnFiltro.setToolTipText("Filtrar");
        btnFiltro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroActionPerformed(evt);
            }
        });

        btnSaude.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/saude (2).png"))); // NOI18N
        btnSaude.setToolTipText("Saúde");
        btnSaude.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaude.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaudeActionPerformed(evt);
            }
        });

        btnAdvogado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/advogados (2).png"))); // NOI18N
        btnAdvogado.setToolTipText("Advogados");
        btnAdvogado.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/relatorio.png"))); // NOI18N
        btnRelatorio.setToolTipText("Relatório");
        btnRelatorio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRelatorioActionPerformed(evt);
            }
        });

        btnImpressao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/impressão.png"))); // NOI18N
        btnImpressao.setToolTipText("Impressão");
        btnImpressao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        btnOutros.setBackground(new java.awt.Color(140, 197, 61));
        btnOutros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/editar.png"))); // NOI18N
        btnOutros.setToolTipText("Outras Solicitações");
        btnOutros.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnOutros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutrosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpnFundoLayout = new javax.swing.GroupLayout(jpnFundo);
        jpnFundo.setLayout(jpnFundoLayout);
        jpnFundoLayout.setHorizontalGroup(
            jpnFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFundoLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jpnFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnFundoLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jpnFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpnFundoLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(btnAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnFundoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnOutros, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnImpressao, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnSaude, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(83, Short.MAX_VALUE))
        );
        jpnFundoLayout.setVerticalGroup(
            jpnFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnFundoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSaude, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAdvogado, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnImpressao, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnOutros)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jpnFundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 200, 490));

        lblCodCliente.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCodCliente.setForeground(new java.awt.Color(255, 255, 255));
        lblCodCliente.setText("Cod. Cliente:");
        jPanel1.add(lblCodCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 10, -1, -1));

        txtCodCliente.setEditable(false);
        txtCodCliente.setToolTipText("Código");
        txtCodCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtCodCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodClienteActionPerformed(evt);
            }
        });
        jPanel1.add(txtCodCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 70, 30));

        lblStatus.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblStatus.setForeground(new java.awt.Color(255, 255, 255));
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblStatus.setText("Status:");
        jPanel1.add(lblStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, 60, -1));

        txtStatus.setEditable(false);
        txtStatus.setToolTipText("Status");
        txtStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStatusActionPerformed(evt);
            }
        });
        jPanel1.add(txtStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 80, 30));

        lblNomeCliente.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblNomeCliente.setForeground(new java.awt.Color(255, 255, 255));
        lblNomeCliente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNomeCliente.setText("Nome:");
        jPanel1.add(lblNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 90, -1));

        txtNomeCliente.setToolTipText("Informe o nome do Cliente");
        txtNomeCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeClienteActionPerformed(evt);
            }
        });
        jPanel1.add(txtNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 400, 30));

        lblApelido.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblApelido.setForeground(new java.awt.Color(255, 255, 255));
        lblApelido.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblApelido.setText("Apelido:");
        jPanel1.add(lblApelido, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, 80, -1));

        txtApelido.setToolTipText("Como é Conhecido");
        txtApelido.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtApelido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApelidoActionPerformed(evt);
            }
        });
        jPanel1.add(txtApelido, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 30, 90, 30));

        lblCelular.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCelular.setForeground(new java.awt.Color(255, 255, 255));
        lblCelular.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCelular.setText("Celular:");
        jPanel1.add(lblCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 70, -1));

        lblWhatssap.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblWhatssap.setForeground(new java.awt.Color(255, 255, 255));
        lblWhatssap.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblWhatssap.setText("Whatssap:");
        jPanel1.add(lblWhatssap, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, 110, -1));

        lblDataNasc.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblDataNasc.setForeground(new java.awt.Color(255, 255, 255));
        lblDataNasc.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDataNasc.setText("Data Nascimento");
        jPanel1.add(lblDataNasc, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, -1, -1));

        lblEstadoCivil.setBackground(new java.awt.Color(255, 255, 255));
        lblEstadoCivil.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblEstadoCivil.setForeground(new java.awt.Color(255, 255, 255));
        lblEstadoCivil.setText("Estado Civil");
        jPanel1.add(lblEstadoCivil, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 80, -1, -1));

        lblCPF.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCPF.setForeground(new java.awt.Color(255, 255, 255));
        lblCPF.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCPF.setText("CPF:");
        jPanel1.add(lblCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 80, 90, -1));

        lblRG.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblRG.setForeground(new java.awt.Color(255, 255, 255));
        lblRG.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblRG.setText("RG:");
        jPanel1.add(lblRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 80, 60, 20));

        lblNomeMae.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblNomeMae.setForeground(new java.awt.Color(255, 255, 255));
        lblNomeMae.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNomeMae.setText("Nome Mãe:");
        jPanel1.add(lblNomeMae, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 90, -1));

        txtNomeMae.setToolTipText("Filiação Nome da Mãe");
        txtNomeMae.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtNomeMae.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeMaeActionPerformed(evt);
            }
        });
        jPanel1.add(txtNomeMae, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 420, 30));

        lblCartaoSUS.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCartaoSUS.setForeground(new java.awt.Color(255, 255, 255));
        lblCartaoSUS.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCartaoSUS.setText("Cartão do SUS");
        jPanel1.add(lblCartaoSUS, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, 110, -1));

        lblTituloEleitoral.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblTituloEleitoral.setForeground(new java.awt.Color(255, 255, 255));
        lblTituloEleitoral.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTituloEleitoral.setText("Titulo Eleitoral:");
        jPanel1.add(lblTituloEleitoral, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 140, 140, -1));

        lblNomePai.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblNomePai.setForeground(new java.awt.Color(255, 255, 255));
        lblNomePai.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNomePai.setText("Nome Pai:");
        jPanel1.add(lblNomePai, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 190, 90, -1));

        txtNomePai.setToolTipText("Filiação Nome do Pai");
        txtNomePai.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtNomePai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomePaiActionPerformed(evt);
            }
        });
        jPanel1.add(txtNomePai, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 420, 30));

        lblSecaoEleitoral.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblSecaoEleitoral.setForeground(new java.awt.Color(255, 255, 255));
        lblSecaoEleitoral.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSecaoEleitoral.setText("Seção Eleitoral");
        jPanel1.add(lblSecaoEleitoral, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 190, 90, -1));

        lblZonaEleitoral.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblZonaEleitoral.setForeground(new java.awt.Color(255, 255, 255));
        lblZonaEleitoral.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblZonaEleitoral.setText("Zona Eleitoral:");
        jPanel1.add(lblZonaEleitoral, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 190, 130, -1));

        lblDataCadastro.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblDataCadastro.setForeground(new java.awt.Color(255, 255, 255));
        lblDataCadastro.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblDataCadastro.setText("Data do Cadastro:");
        jPanel1.add(lblDataCadastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 260, 120, -1));

        lblOBS.setForeground(new java.awt.Color(255, 255, 255));
        lblOBS.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOBS.setText("OBS:");
        jPanel1.add(lblOBS, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 260, 50, -1));

        jTextAreaOBS.setColumns(20);
        jTextAreaOBS.setRows(5);
        jTextAreaOBS.setToolTipText("Campo para Observações");
        jTextAreaOBS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextAreaOBSMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTextAreaOBS);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 250, 520, 80));

        lblEndereco.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblEndereco.setForeground(new java.awt.Color(255, 255, 255));
        lblEndereco.setText("Endereço: Av, Rua, Travessa");
        jPanel1.add(lblEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 240, -1));

        txtEndereco.setToolTipText("Informe seu Endereço");
        txtEndereco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtEndereco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEnderecoActionPerformed(evt);
            }
        });
        jPanel1.add(txtEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 340, 720, 30));

        lblBairro.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblBairro.setForeground(new java.awt.Color(255, 255, 255));
        lblBairro.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblBairro.setText("Bairro:");
        jPanel1.add(lblBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 380, 100, -1));

        txtBairro.setToolTipText("O Bairro");
        txtBairro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });
        jPanel1.add(txtBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 400, 250, 30));

        lblComplemento.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblComplemento.setForeground(new java.awt.Color(255, 255, 255));
        lblComplemento.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblComplemento.setText("Complemento: Apt, Casa, Sítio,  Etapa");
        jPanel1.add(lblComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, 230, -1));

        txtComplemento.setToolTipText("Complemento");
        txtComplemento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComplementoActionPerformed(evt);
            }
        });
        jPanel1.add(txtComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, 250, 30));

        lblCidade.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCidade.setForeground(new java.awt.Color(255, 255, 255));
        lblCidade.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCidade.setText("Cidade:");
        jPanel1.add(lblCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 380, 100, -1));

        txtCidade.setToolTipText("A Cidade");
        txtCidade.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCidadeActionPerformed(evt);
            }
        });
        jPanel1.add(txtCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 400, 140, 30));

        lblCEP.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblCEP.setForeground(new java.awt.Color(255, 255, 255));
        lblCEP.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblCEP.setText("CEP:");
        jPanel1.add(lblCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, 100, -1));

        lblUF.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        lblUF.setForeground(new java.awt.Color(255, 255, 255));
        lblUF.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblUF.setText("UF:");
        jPanel1.add(lblUF, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 430, 40, -1));

        txtUF.setToolTipText("O Estado");
        txtUF.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUFActionPerformed(evt);
            }
        });
        jPanel1.add(txtUF, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 450, 50, 30));

        btnSalvarCadastro.setBackground(new java.awt.Color(0, 115, 190));
        btnSalvarCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/diskete.png"))); // NOI18N
        btnSalvarCadastro.setToolTipText("Salvando as Informações");
        btnSalvarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarCadastroActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalvarCadastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 440, 60, 40));

        btnSaida1.setBackground(new java.awt.Color(0, 115, 190));
        btnSaida1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/saida.png"))); // NOI18N
        btnSaida1.setToolTipText("Saindo do Cadastro");
        btnSaida1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaida1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaida1, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 440, 50, 40));

        btnAtualizarCadastro.setBackground(new java.awt.Color(0, 115, 190));
        btnAtualizarCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/atulizar.png"))); // NOI18N
        btnAtualizarCadastro.setToolTipText("Atualizar");
        btnAtualizarCadastro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAtualizarCadastroMouseClicked(evt);
            }
        });
        btnAtualizarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarCadastroActionPerformed(evt);
            }
        });
        jPanel1.add(btnAtualizarCadastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 440, 50, 40));

        btnProximo.setBackground(new java.awt.Color(0, 115, 190));
        btnProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/proximo.png"))); // NOI18N
        btnProximo.setToolTipText("Proximo Cadastro");
        btnProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoActionPerformed(evt);
            }
        });
        jPanel1.add(btnProximo, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 440, 50, 40));

        try {
            txtCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 100, 110, 30));

        try {
            txtCEP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCEPActionPerformed(evt);
            }
        });
        jPanel1.add(txtCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 450, 120, 30));

        txtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("(81)9-####-####"))));
        txtCelular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCelularActionPerformed(evt);
            }
        });
        jPanel1.add(txtCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, 120, 30));

        txtCelular_Whatsapp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("(81)9-####-####"))));
        jPanel1.add(txtCelular_Whatsapp, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 120, 30));

        try {
            txtTituloEleitoral.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtTituloEleitoral, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 160, 140, -1));

        try {
            txtSecaoEleitoral.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtSecaoEleitoral, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 210, 90, -1));

        try {
            txtZonaEleitoral.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtZonaEleitoral, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 210, 80, -1));

        btnAnterior1.setBackground(new java.awt.Color(0, 115, 190));
        btnAnterior1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/anterior.png"))); // NOI18N
        btnAnterior1.setToolTipText("Cadastro Anterior");
        btnAnterior1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnterior1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnAnterior1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 440, 50, 40));

        try {
            txtCartaoSus.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-####-####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtCartaoSus, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 160, 140, -1));

        try {
            txtRG.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###-#")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtRG, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 100, 110, 30));

        txtDataCadastro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        jPanel1.add(txtDataCadastro, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 120, -1));

        txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("##-##-####"))));
        jPanel1.add(txtDataNasc, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 100, 90, -1));

        jComboBoxEstadoCivil.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione,", "Casado(a),", "Solteiro(a),", "Viúvo(a),", "Divorciado(a)" }));
        jComboBoxEstadoCivil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxEstadoCivilActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxEstadoCivil, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 100, -1, -1));

        btnImprimir.setBackground(new java.awt.Color(0, 115, 190));
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imprimir.png"))); // NOI18N
        btnImprimir.setToolTipText("Saindo do Cadastro");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        jPanel1.add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 440, 50, 40));

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod", "Status", "Nome", "Apelido", "Celular", "Celular_Whatssap", "Data_Nasc", "Estado_Civil", "Mae", "Pai", "CPF", "RG", "SUS", "Titulo_Eleitoral", "Secao_Eleitoral", "Zona_Eleitoral", "Data_Cadastro", "Observacao", "id_endereco", "Logradouro", "Complemento", "Bairro", "Cidade", "Cep", "UF"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
        });
        jTableClientes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableClientesKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTableClientes);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 1014, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(308, 308, 308))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here: Ir para o Menu
        Menu telaMenu = new Menu();
        telaMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastroActionPerformed
        // TODO add your handling code here:Tela Cadastra
        Cadastro telaCadastro = new Cadastro();
        telaCadastro.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCadastroActionPerformed

    private void btnAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAgendaActionPerformed

    private void btnFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroActionPerformed
        // TODO add your handling code here: ir para tela Filtro
        Filtro telaFiltro = new Filtro();
        telaFiltro.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnFiltroActionPerformed

    private void btnRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRelatorioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRelatorioActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void txtApelidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApelidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApelidoActionPerformed

    private void txtEnderecoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEnderecoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEnderecoActionPerformed

    private void txtStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStatusActionPerformed
        // TODO add your handling code here: Status do cliente iniciado como ativo
        //txtStatus.setText("Ativo");
    }//GEN-LAST:event_txtStatusActionPerformed

    private void txtNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeClienteActionPerformed

    private void txtNomeMaeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeMaeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeMaeActionPerformed

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroActionPerformed

    private void txtNomePaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomePaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomePaiActionPerformed

    private void txtComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComplementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComplementoActionPerformed

    private void txtCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidadeActionPerformed

    private void btnProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoActionPerformed
        // TODO add your handling code here: Sair do Sistema
        // Obtém o índice da linha selecionada atualmente na tabela
        int linhaSelecionada = jTableClientes.getSelectedRow();

        // Verifica se há alguma linha selecionada
        if (linhaSelecionada == -1) {
            // Se nenhuma linha estiver selecionada, seleciona a última linha por padrão
            JOptionPane.showMessageDialog(this, "Nenhuma linha está selecionada. Selecione uma linha primeiro.", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else if (linhaSelecionada < jTableClientes.getRowCount() - 1) {
            // Se a linha selecionada não for a primeira, seleciona a linha anterior
            jTableClientes.setRowSelectionInterval(linhaSelecionada + 1, linhaSelecionada + 1);
        } else {
            // Caso esteja na primeira linha, exibe um aviso
            JOptionPane.showMessageDialog(this, "Você já está na ultima linha.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
        txtNomeCliente.requestFocusInWindow();
    }//GEN-LAST:event_btnProximoActionPerformed

    private void btnSaida1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaida1ActionPerformed
        // TODO add your handling code here:Sair do Sistema
        Menu telaMenu = new Menu();
        telaMenu.setVisible(true);
        dispose();

    }//GEN-LAST:event_btnSaida1ActionPerformed

    private void btnAtualizarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarCadastroActionPerformed
        // TODO add your handling code here: Atualizar os campos
        Conexao conexao = new Conexao();
        DefaultTableModel tabCliente = (DefaultTableModel) jTableClientes.getModel();
        if (conexao.conectar()) {
            System.out.println("Conexão com o banco de dados foi estabelecida com sucesso!");

            // Limpar a tabela antes de adicionar novos dados
            tabCliente.setRowCount(0); // Remove todas as linhas

            try {
                Statement st = conexao.getConnection().createStatement();
                String sql = "SELECT c.Cod_cliente, c.Status_Cliente, c.nome_cliente, c.Apelido_Cliente, c.Celular, "
                        + "c.Celular_Whatsapp, c.Data_Nasc, c.Estado_Civil, c.Nome_Mae, c.Nome_Pai, c.CPF_Cliente, c.RG_Cliente, "
                        + "c.Cartao_Sus, c.Titulo_Eleitoral, c.Secao_Eleitoral, c.Zona_Eleitoral, c.Data_Cadastro, c.Observacao, "
                        + "e.id_endereco, e.logradouro, e.bairro, e.complemento, e.cidade, e.CEP, e.uf "
                        + "FROM cliente c "
                        + "JOIN endereco e ON c.id_endereco = e.id_endereco";

                ResultSet rs = st.executeQuery(sql);
 
                // Adicionar os resultados na jTableCliente
                while (rs.next()) {
                    Object[] dados = {
                        rs.getInt("Cod_cliente"),
                        rs.getString("Status_Cliente"),
                        rs.getString("nome_cliente"),
                        rs.getString("Apelido_Cliente"),
                        rs.getString("Celular"),
                        rs.getString("Celular_Whatsapp"),
                        rs.getString("Data_Nasc"),
                        rs.getString("Estado_Civil"),
                        rs.getString("Nome_Mae"),
                        rs.getString("Nome_Pai"),
                        rs.getString("CPF_Cliente"),
                        rs.getString("RG_Cliente"),
                        rs.getString("Cartao_Sus"),
                        rs.getString("Titulo_Eleitoral"),
                        rs.getString("Secao_Eleitoral"),
                        rs.getString("Zona_Eleitoral"),
                        rs.getString("Data_Cadastro"),
                        rs.getString("Observacao"),
                        rs.getInt("id_endereco"),
                        rs.getString("logradouro"), // Dados de endereço
                        rs.getString("bairro"),
                        rs.getString("complemento"),
                        rs.getString("cidade"),
                        rs.getString("CEP"),
                        rs.getString("uf")
                    };
                    tabCliente.addRow(dados);
                }
                
                jTableClientes.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    int selectedRow = jTableClientes.getSelectedRow();
                    if (selectedRow != -1) {
                        // Preencher os campos com os dados da linha selecionada
                        txtCodCliente.setText(jTableClientes.getValueAt(selectedRow, 0).toString());
                        txtStatus.setText(jTableClientes.getValueAt(selectedRow, 1).toString());
                        txtNomeCliente.setText(jTableClientes.getValueAt(selectedRow, 2).toString());
                        txtApelido.setText(jTableClientes.getValueAt(selectedRow, 3).toString());
                        txtCelular.setText(jTableClientes.getValueAt(selectedRow, 4).toString());
                        txtCelular_Whatsapp.setText(jTableClientes.getValueAt(selectedRow, 5).toString());
                        txtDataNasc.setText(jTableClientes.getValueAt(selectedRow, 6).toString());
                        // Definir valor padrão no JComboBox se estiver vazio
                        jComboBoxEstadoCivil.setSelectedItem(jTableClientes.getValueAt(selectedRow, 7).toString());
                        /*if (jComboBoxEstadoCivil.getSelectedItem() == null) {
                            jComboBoxEstadoCivil.setSelectedIndex(0);  // Seleciona o primeiro item por padrão
                        }*/
                        txtNomeMae.setText(jTableClientes.getValueAt(selectedRow, 8).toString());
                        txtNomePai.setText(jTableClientes.getValueAt(selectedRow, 9).toString());
                        txtCPF.setText(jTableClientes.getValueAt(selectedRow, 10).toString());
                        txtRG.setText(jTableClientes.getValueAt(selectedRow, 11).toString());
                        txtCartaoSus.setText(jTableClientes.getValueAt(selectedRow, 12).toString());
                        txtTituloEleitoral.setText(jTableClientes.getValueAt(selectedRow, 13).toString());
                        txtSecaoEleitoral.setText(jTableClientes.getValueAt(selectedRow, 14).toString());
                        txtZonaEleitoral.setText(jTableClientes.getValueAt(selectedRow, 15).toString());
                        txtDataCadastro.setText(jTableClientes.getValueAt(selectedRow, 16).toString());
                        String observacao = jTextAreaOBS.getText().toString();
////                        jTextAreaOBS.setText(jTextAreaOBS.getText());

                        // Preencher os campos de endereço
                        txtEndereco.setText(jTableClientes.getValueAt(selectedRow, 19).toString());
                        txtBairro.setText(jTableClientes.getValueAt(selectedRow, 20).toString());
                        txtComplemento.setText(jTableClientes.getValueAt(selectedRow, 21).toString());
                        txtCidade.setText(jTableClientes.getValueAt(selectedRow, 22).toString());
                        txtCEP.setText(jTableClientes.getValueAt(selectedRow, 23).toString());
                        txtUF.setText(jTableClientes.getValueAt(selectedRow, 24).toString());
                    }
                }
            }
        }
        );
                
                
            } catch (SQLException e) {
                System.out.println("Erro ao realizar consulta: " + e.getMessage());
            } finally {
                // Desconectar do banco de dados
                conexao.desconectar();
            }
        } else {
            System.out.println("Não foi possível conectar ao banco de dados.");
        }
        

        // Obter o ID do cliente selecionado
        /*
         // TODO add your handling code here: Atualizar os campos
        ResultadoFiltro();
        FiltroEndereco();
        
        
        if(jTableClientes.getSelectedRow() != -1) {
           // Criar instâncias das classes Cliente e Endereco
            Cliente cli = new Cliente();
            Endereco end = new Endereco();
            
            // Instanciar os DAOs
            ClienteDAO clienteDAO = new ClienteDAO();
            EnderecoDAO enderecoDAO = new EnderecoDAO();

            
        // Obter o ID do cliente selecionado
        int idCliente = Integer.parseInt(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 0).toString());

        // Preencher o objeto Cliente com os dados do formulário
        cli.setId_cliente(idCliente);
        cli.setCod_Cliente(Integer.parseInt(txtCodCliente.getText()));
        cli.setStatus_Cliente(txtStatus.getText());
        cli.setNome_Cliente(txtNomeCliente.getText());
        cli.setApelido_Cliente(txtApelido.getText());
        cli.setCelular(txtCelular.getText());
        cli.setCelular_Whatsapp(txtCelular_Whatsapp.getText());
// Converter a data para o formato yyyy-MM-dd antes de atualizar
       // Converter a data de dd/MM/yyyy para yyyy-MM-dd antes de salvar no banco
       /* String dataNasc = txtDataNasc.getText();
        if (dataNasc.matches("\\d{2}/\\d{2}/\\d{4}")) {  // Verifica se está no formato dd/MM/yyyy
            try {
                String dataConvertida = DataUtil.formatarDataParaMySQL(dataNasc);
                cli.setData_Nasc(dataConvertida);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao formatar a data: " + e.getMessage());
                return;  // Sai do método se houver erro ao formatar a data
            }
        } else {
            cli.setData_Nasc(dataNasc);  // Caso já esteja no formato yyyy-MM-dd
        }



codigo anterior antes do acima
//        cli.setData_Nasc(txtDataNasc.getText());
        // Definir valor padrão no JComboBox se estiver vazio
        if (jComboBoxEstadoCivil.getSelectedItem() == null) {
            jComboBoxEstadoCivil.setSelectedIndex(0);  // Seleciona o primeiro item por padrão
        }
//        cli.setEstado_Civil(jComboBoxEstadoCivil.getSelectedItem().toString());
        cli.setNome_Mae(txtNomeMae.getText());
        cli.setNome_Pai(txtNomePai.getText());
        cli.setCpf_Cliente(txtCPF.getText());
        cli.setRG_Cliente(txtRG.getText());
        cli.setCartao_Sus(txtCartaoSus.getText());
        cli.setTitulo_Eleitoral(txtTituloEleitoral.getText());
        cli.setSecao_Eleitoral(txtSecaoEleitoral.getText());
        cli.setZona_Eleitoral(txtZonaEleitoral.getText());
//        cli.setData_Cadastro(txtDataCadastro.getText());
        cli.setObservacao(jTextAreaOBS.getText());

        // Preencher o objeto Endereco com os dados do formulário
        end.setLogradouro(txtEndereco.getText());
        end.setComplemento(txtComplemento.getText());
        end.setBairro(txtBairro.getText());
        end.setCidade(txtCidade.getText());
        end.setCep(txtCEP.getText());
        end.setUf(txtUF.getText());

        // Atualizar os dados do cliente no banco
        boolean clienteAtualizado = clienteDAO.atualizarCliente(cli);

        // Atualizar os dados do endereço no banco
        boolean enderecoAtualizado = enderecoDAO.atualizarEndereco(end, cli.getId_endereco());


        if (clienteAtualizado && enderecoAtualizado) {
            JOptionPane.showMessageDialog(null, "Cadastro atualizado com sucesso!");
        } else {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar o cadastro.");
        }

        // Atualizar a exibição da tabela após a atualização
        ResultadoFiltro();
        FiltroEndereco();
    } else {
        JOptionPane.showMessageDialog(null, "Selecione um cliente para atualizar.");
    }

    }                        
        
         */

    }//GEN-LAST:event_btnAtualizarCadastroActionPerformed

    private void btnSalvarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarCadastroActionPerformed

        // TODO add your handling code here: Salvar no banco de dados
        Conexao conexao = new Conexao();
        DefaultTableModel tabCliente = (DefaultTableModel) jTableClientes.getModel();

        Cliente cliente = new Cliente();
    Endereco endereco = new Endereco();

    // Preencher dados do cliente
    cliente.setCod_Cliente(Integer.parseInt(txtCodCliente.getText()));
    cliente.setNome_Cliente(txtNomeCliente.getText());
    cliente.setApelido_Cliente(txtApelido.getText());
    cliente.setCelular(txtCelular.getText());
    cliente.setCelular_Whatsapp(txtCelular_Whatsapp.getText());
    cliente.setData_Nasc(txtDataNasc.getText());
    cliente.setEstado_Civil(jComboBoxEstadoCivil.getSelectedItem().toString());
    cliente.setNome_Mae(txtNomeMae.getText());
    cliente.setNome_Pai(txtNomePai.getText());
    cliente.setCpf_Cliente(txtCPF.getText());
    cliente.setRG_Cliente(txtRG.getText());
    cliente.setCartao_Sus(txtCartaoSus.getText());
    cliente.setTitulo_Eleitoral(txtTituloEleitoral.getText());
    cliente.setSecao_Eleitoral(txtSecaoEleitoral.getText());
    cliente.setZona_Eleitoral(txtZonaEleitoral.getText());
    cliente.setObservacao(jTextAreaOBS.getText());

    // Preencher dados do endereço
    //endereco.setId_endereco(Integer.parseInt(txtIdEndereco.getText()));
    endereco.setLogradouro(txtEndereco.getText());
    endereco.setBairro(txtBairro.getText());
    endereco.setComplemento(txtComplemento.getText());
    endereco.setCidade(txtCidade.getText());
    endereco.setCep(txtCEP.getText());
    endereco.setUf(txtUF.getText());

    ClienteDAO clienteDAO = new ClienteDAO();
    if (clienteDAO.atualizarCliente(cliente, endereco)) {
        JOptionPane.showMessageDialog(this, "Cliente e Endereço atualizados com sucesso!");
    } else {
        JOptionPane.showMessageDialog(this, "Erro ao atualizar Cliente e Endereço.");
    }

    }//GEN-LAST:event_btnSalvarCadastroActionPerformed

    private void btnOutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutrosActionPerformed
        // TODO add your handling code here: ir para outros
        Outros telaOutros = new Outros();
        telaOutros.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnOutrosActionPerformed

    private void txtCodClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodClienteActionPerformed
        // TODO add your handling code here:
        /*  Conexao conexao = new Conexao();
        
        try {
    String sql = "INSERT INTO cliente (...) VALUES (...)";
    
    // Usa RETURN_GENERATED_KEYS para pegar o id gerado automaticamente
    PreparedStatement stmt = conexao.getConnection().prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
    
    // Configura os parâmetros da inserção aqui
    
    stmt.executeUpdate();
    
    // Obtém o id gerado
    ResultSet generatedKeys = stmt.getGeneratedKeys();
    if (generatedKeys.next()) {
        int idGerado = generatedKeys.getInt(1);
        txtCodCliente.setText(String.valueOf(idGerado));  // Define o id gerado no campo txtCodCliente
    }

    stmt.close();
} catch (SQLException e) {
    e.printStackTrace();
}*/
    }//GEN-LAST:event_txtCodClienteActionPerformed

    private void txtUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUFActionPerformed

    private void btnAnterior1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnterior1ActionPerformed
        // TODO add your handling code here: volta um na tabela

// Obtém o índice da linha selecionada atualmente na tabela
        int linhaSelecionada = jTableClientes.getSelectedRow();

        // Verifica se há alguma linha selecionada
        if (linhaSelecionada == -1) {
            // Se nenhuma linha estiver selecionada, seleciona a última linha por padrão
            JOptionPane.showMessageDialog(this, "Nenhuma linha está selecionada. Selecione uma linha primeiro.", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else if (linhaSelecionada > 0) {
            // Se a linha selecionada não for a primeira, seleciona a linha anterior
            jTableClientes.setRowSelectionInterval(linhaSelecionada - 1, linhaSelecionada - 1);
        } else {
            // Caso esteja na primeira linha, exibe um aviso
            JOptionPane.showMessageDialog(this, "Você já está na primeira linha.", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }

        // Adiciona um listener para capturar mudanças na seleção da JTable
        jTableClientes.getSelectionModel().addListSelectionListener(e -> {
            // Verifica se há uma linha selecionada e se o evento de mudança não está sendo ajustado

            if (!e.getValueIsAdjusting()) {
//            int linhaSelecionada = jTableClientes.getSelectedRow();
                if (linhaSelecionada != -1) {
                    // Obtenha os dados da linha selecionada e exiba nos campos de texto
                    txtCodCliente.setText(jTableClientes.getValueAt(linhaSelecionada, 0).toString());
                    txtStatus.setText(jTableClientes.getValueAt(linhaSelecionada, 1).toString());
                    txtNomeCliente.setText(jTableClientes.getValueAt(linhaSelecionada, 2).toString());
                    txtApelido.setText(jTableClientes.getValueAt(linhaSelecionada, 3).toString());
                    txtCelular.setText(jTableClientes.getValueAt(linhaSelecionada, 4).toString());
                    txtCelular_Whatsapp.setText(jTableClientes.getValueAt(linhaSelecionada, 5).toString());
                    txtDataNasc.setText(jTableClientes.getValueAt(linhaSelecionada, 6).toString());
                    jTableClientes.setValueAt(jComboBoxEstadoCivil.getSelectedItem().toString(), jTableClientes.getSelectedRow(), 7); // é uma lista não é Supondo que txtEstadoCivil seja um JComboBox
                    txtNomeMae.setText(jTableClientes.getValueAt(linhaSelecionada, 8).toString());
                    txtNomePai.setText(jTableClientes.getValueAt(linhaSelecionada, 9).toString());
                    txtCPF.setText(jTableClientes.getValueAt(linhaSelecionada, 10).toString());
                    txtRG.setText(jTableClientes.getValueAt(linhaSelecionada, 11).toString());
                    txtCartaoSus.setText(jTableClientes.getValueAt(linhaSelecionada, 12).toString());
                    txtTituloEleitoral.setText(jTableClientes.getValueAt(linhaSelecionada, 13).toString());
                    txtSecaoEleitoral.setText(jTableClientes.getValueAt(linhaSelecionada, 14).toString());
                    txtZonaEleitoral.setText(jTableClientes.getValueAt(linhaSelecionada, 15).toString());
                    txtDataCadastro.setText(jTableClientes.getValueAt(linhaSelecionada, 16).toString());
                }
            }
        });


    }//GEN-LAST:event_btnAnterior1ActionPerformed

    private void txtCEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCEPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCEPActionPerformed

    private void btnAtualizarCadastroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAtualizarCadastroMouseClicked
        // TODO add your handling code here:
        if (jTableClientes.getSelectedRow() != -1) {
            // Atualiza os campos do formulário com os dados da linha selecionada
            txtCodCliente.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 0).toString());
            txtStatus.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 1).toString());
            txtNomeCliente.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 2).toString());
            txtApelido.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 3).toString());
            txtCelular.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 4).toString());
            txtCelular_Whatsapp.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 5).toString());
            txtDataNasc.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 6).toString());

            // Para o JList (txtEstadoCivil), usamos o setSelectedValue
            jTableClientes.setValueAt(jComboBoxEstadoCivil.getSelectedItem().toString(), jTableClientes.getSelectedRow(), 7);

            txtNomeMae.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 8).toString());
            txtNomePai.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 9).toString());
            txtCPF.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 10).toString());
            txtRG.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 11).toString());
            txtCartaoSus.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 12).toString());
            txtTituloEleitoral.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 13).toString());
            txtSecaoEleitoral.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 14).toString());
            txtZonaEleitoral.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 15).toString());
            txtDataCadastro.setText(jTableClientes.getValueAt(jTableClientes.getSelectedRow(), 16).toString());
        }
    }//GEN-LAST:event_btnAtualizarCadastroMouseClicked

    private void jTableClientesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableClientesKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableClientesKeyReleased

    private void btnSaudeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaudeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaudeActionPerformed

    private void jComboBoxEstadoCivilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxEstadoCivilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxEstadoCivilActionPerformed

    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableClientesMouseClicked

    private void txtCelularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCelularActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCelularActionPerformed

    private void jTextAreaOBSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextAreaOBSMouseClicked
        // TODO add your handling code here:
      
    }//GEN-LAST:event_jTextAreaOBSMouseClicked

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cadastro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdvogado;
    private javax.swing.JButton btnAgenda;
    private javax.swing.JButton btnAnterior1;
    private javax.swing.JButton btnAtualizarCadastro;
    private javax.swing.JButton btnCadastro;
    private javax.swing.JButton btnFiltro;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnImpressao;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnOutros;
    private javax.swing.JButton btnProximo;
    private javax.swing.JButton btnRelatorio;
    private javax.swing.JButton btnSaida1;
    private javax.swing.JButton btnSalvarCadastro;
    private javax.swing.JButton btnSaude;
    private javax.swing.JComboBox<String> jComboBoxEstadoCivil;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTextArea jTextAreaOBS;
    private javax.swing.JPanel jpnFundo;
    private javax.swing.JLabel lblApelido;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCEP;
    private javax.swing.JLabel lblCPF;
    private javax.swing.JLabel lblCartaoSUS;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblCodCliente;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblDataCadastro;
    private javax.swing.JLabel lblDataNasc;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEstadoCivil;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblNomeMae;
    private javax.swing.JLabel lblNomePai;
    private javax.swing.JLabel lblOBS;
    private javax.swing.JLabel lblRG;
    private javax.swing.JLabel lblSecaoEleitoral;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTituloEleitoral;
    private javax.swing.JLabel lblUF;
    private javax.swing.JLabel lblWhatssap;
    private javax.swing.JLabel lblZonaEleitoral;
    private javax.swing.JTextField txtApelido;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCEP;
    private javax.swing.JFormattedTextField txtCPF;
    private javax.swing.JFormattedTextField txtCartaoSus;
    private javax.swing.JFormattedTextField txtCelular;
    private javax.swing.JFormattedTextField txtCelular_Whatsapp;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtCodCliente;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtDataCadastro;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNomeMae;
    private javax.swing.JTextField txtNomePai;
    private javax.swing.JFormattedTextField txtRG;
    private javax.swing.JFormattedTextField txtSecaoEleitoral;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JFormattedTextField txtTituloEleitoral;
    private javax.swing.JTextField txtUF;
    private javax.swing.JFormattedTextField txtZonaEleitoral;
    // End of variables declaration//GEN-END:variables

    public void limparCampos() {
        txtCodCliente.setText("");
        txtStatus.setText("");
        txtNomeCliente.setText("");
        txtApelido.setText("");
        txtCelular.setText("");
        txtCelular_Whatsapp.setText("");
        txtDataNasc.setText("");
        jComboBoxEstadoCivil.setSelectedIndex(0);
        txtNomeMae.setText("");
        txtNomePai.setText("");
        txtCPF.setText("");
        txtRG.setText("");
        txtCartaoSus.setText("");
        txtTituloEleitoral.setText("");
        txtSecaoEleitoral.setText("");
        txtZonaEleitoral.setText("");
        txtDataCadastro.setText("");
        txtEndereco.setText("");
    }

    // Declarando o JComboBox do estado civil
    public void atualizarDados() {
        // Verifica se alguma linha está selecionada
        int linhaSelecionada = jTableClientes.getSelectedRow();

        if (linhaSelecionada != -1) {
            // Atualiza os campos do formulário com os dados da linha selecionada
            txtCodCliente.setText(jTableClientes.getValueAt(linhaSelecionada, 0).toString());
            txtStatus.setText(jTableClientes.getValueAt(linhaSelecionada, 1).toString());
            txtNomeCliente.setText(jTableClientes.getValueAt(linhaSelecionada, 2).toString());
            txtApelido.setText(jTableClientes.getValueAt(linhaSelecionada, 3).toString());
            txtCelular.setText(jTableClientes.getValueAt(linhaSelecionada, 4).toString());
            txtCelular_Whatsapp.setText(jTableClientes.getValueAt(linhaSelecionada, 5).toString());
            txtDataNasc.setText(jTableClientes.getValueAt(linhaSelecionada, 6).toString());

            // Atualiza o JComboBox para o estado civil
            String estadoCivil = jTableClientes.getValueAt(linhaSelecionada, 7).toString();
            jComboBoxEstadoCivil.setSelectedItem(estadoCivil);

            txtNomeMae.setText(jTableClientes.getValueAt(linhaSelecionada, 8).toString());
            txtNomePai.setText(jTableClientes.getValueAt(linhaSelecionada, 9).toString());
            txtCPF.setText(jTableClientes.getValueAt(linhaSelecionada, 10).toString());
            txtRG.setText(jTableClientes.getValueAt(linhaSelecionada, 11).toString());
            txtCartaoSus.setText(jTableClientes.getValueAt(linhaSelecionada, 12).toString());
            txtTituloEleitoral.setText(jTableClientes.getValueAt(linhaSelecionada, 13).toString());
            txtSecaoEleitoral.setText(jTableClientes.getValueAt(linhaSelecionada, 14).toString());
            txtZonaEleitoral.setText(jTableClientes.getValueAt(linhaSelecionada, 15).toString());
            txtDataCadastro.setText(jTableClientes.getValueAt(linhaSelecionada, 16).toString());

            // Atualiza os dados na jTableClientes
            if (jTableClientes.getSelectedRow() != -1) {
                jTableClientes.setValueAt(txtCodCliente.getText(), jTableClientes.getSelectedRow(), 0);
                jTableClientes.setValueAt(txtApelido.getText(), jTableClientes.getSelectedRow(), 1);
                jTableClientes.setValueAt(txtCelular.getText(), jTableClientes.getSelectedRow(), 2);
                jTableClientes.setValueAt(txtCelular_Whatsapp.getText(), jTableClientes.getSelectedRow(), 3);
                jTableClientes.setValueAt(txtDataNasc.getText(), jTableClientes.getSelectedRow(), 4);

                // Atualiza o valor do estado civil no JComboBox
                jTableClientes.setValueAt(jComboBoxEstadoCivil.getSelectedItem().toString(), jTableClientes.getSelectedRow(), 7);

                jTableClientes.setValueAt(txtCPF.getText(), jTableClientes.getSelectedRow(), 6);
                jTableClientes.setValueAt(txtRG.getText(), jTableClientes.getSelectedRow(), 7);
                jTableClientes.setValueAt(txtNomeCliente.getText(), jTableClientes.getSelectedRow(), 8);
                jTableClientes.setValueAt(txtNomePai.getText(), jTableClientes.getSelectedRow(), 9);
                jTableClientes.setValueAt(txtCartaoSus.getText(), jTableClientes.getSelectedRow(), 10);
                jTableClientes.setValueAt(txtTituloEleitoral.getText(), jTableClientes.getSelectedRow(), 12);
                jTableClientes.setValueAt(txtZonaEleitoral.getText(), jTableClientes.getSelectedRow(), 13);
                jTableClientes.setValueAt(txtSecaoEleitoral.getText(), jTableClientes.getSelectedRow(), 14);
                jTableClientes.setValueAt(txtDataCadastro.getText(), jTableClientes.getSelectedRow(), 15);

                // Atualiza os campos de UF e CEP, caso sejam necessários
                jTableClientes.setValueAt(txtUF.getText(), jTableClientes.getSelectedRow(), 16);
                jTableClientes.setValueAt(txtCEP.getText(), jTableClientes.getSelectedRow(), 17);
            }
        } else {
            // Exibe uma mensagem se nenhuma linha estiver selecionada
            JOptionPane.showMessageDialog(this, "Nenhuma linha selecionada!", "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void ResultadoFiltro() {
        Conexao conexao = new Conexao();

        // Tente conectar ao banco de dados
        if (conexao.conectar()) {
            System.out.println("Conexão com o banco de dados foi estabelecida com sucesso!");

            try {
                // Crie o statement e execute a consulta com JOIN entre cliente e endereco
                Statement st = conexao.getConnection().createStatement();
                String sql = "SELECT c.Cod_cliente, c.Status_Cliente, c.nome_cliente, c.Apelido_Cliente, c.Celular, "
                        + "c.Celular_Whatsapp, c.Data_Nasc, c.Estado_Civil, c.Nome_Mae, c.Nome_Pai, c.CPF_Cliente, c.RG_Cliente, "
                        + "c.Cartao_Sus, c.Titulo_Eleitoral, c.Secao_Eleitoral, c.Zona_Eleitoral, c.Data_Cadastro, c.Observacao, "
                        + "e.id_endereco, e.logradouro, e.bairro, e.complemento, e.cidade, e.cep, e.uf "
                        + "FROM cliente c "
                        + "JOIN endereco e ON c.id_endereco = e.id_endereco";

                ResultSet rs = st.executeQuery(sql);

                // Exiba os resultados
                while (rs.next()) {
                    // Preencher campos do cliente
                    txtCodCliente.setText(String.valueOf(rs.getInt("Cod_Cliente")));
                    txtStatus.setText(rs.getString("Status_Cliente"));
                    txtNomeCliente.setText(rs.getString("nome_cliente"));
                    txtApelido.setText(rs.getString("Apelido_Cliente"));
                    txtCelular.setText(rs.getString("Celular"));
                    txtCelular_Whatsapp.setText(rs.getString("Celular_Whatsapp"));
                    txtDataNasc.setText(rs.getString("Data_Nasc"));

                    // Corrigir seleção do Estado Civil
                    setEstadoCivil(rs.getString("Estado_Civil"));

                    txtNomeMae.setText(rs.getString("Nome_Mae"));
                    txtNomePai.setText(rs.getString("Nome_Pai"));
                    txtCPF.setText(rs.getString("CPF_Cliente"));
                    txtRG.setText(rs.getString("RG_Cliente"));
                    txtCartaoSus.setText(rs.getString("Cartao_Sus"));
                    txtTituloEleitoral.setText(rs.getString("Titulo_Eleitoral"));
                    txtSecaoEleitoral.setText(rs.getString("Secao_Eleitoral"));
                    txtZonaEleitoral.setText(rs.getString("Zona_Eleitoral"));
                    txtDataCadastro.setText(rs.getString("Data_Cadastro"));
                    jTextAreaOBS.setText(rs.getString("Observacao"));

                    // Preencher campos do endereço
                    txtEndereco.setText(rs.getString("logradouro"));
                    txtBairro.setText(rs.getString("bairro"));
                    txtComplemento.setText(rs.getString("complemento"));
                    txtCidade.setText(rs.getString("cidade"));
                    txtCEP.setText(rs.getString("cep"));
                    txtUF.setText(rs.getString("uf"));
                }

            } catch (SQLException e) {
                System.out.println("Erro ao realizar consulta: " + e.getMessage());
            } finally {
                // Desconecte do banco de dados
                conexao.desconectar();
            }
        } else {
            System.out.println("Não foi possível conectar ao banco de dados.");
        }
    }

    private void setEstadoCivil(String estadoCivil) {
        switch (estadoCivil) {
            case "Solteiro":
                jComboBoxEstadoCivil.setSelectedIndex(0);  // Índice 0
                break;
            case "Casado":
                jComboBoxEstadoCivil.setSelectedIndex(1);  // Índice 1
                break;
            case "Divorciado":
                jComboBoxEstadoCivil.setSelectedIndex(2);  // Índice 2
                break;
            case "Viúvo":
                jComboBoxEstadoCivil.setSelectedIndex(3);  // Índice 3
                break;
            default:
                jComboBoxEstadoCivil.setSelectedIndex(-1);  // Nenhum selecionado
                break;
        }
    }

    public void FiltroEndereco() {
        Conexao conexao = new Conexao();

        // Tente conectar ao banco de dados
        if (conexao.conectar()) {
            System.out.println("Conexão com o banco de dados foi estabelecida com sucesso!");

            // Realize uma consulta simples para testar a comunicação
            try {
                Statement st = conexao.getConnection().createStatement();
                ResultSet rs = st.executeQuery("SELECT * FROM endereco");
                // Exiba os resultados
                while (rs.next()) {
                    txtEndereco.setText(rs.getString("Logradouro"));
                    txtBairro.setText(rs.getString("Bairro"));
                    txtComplemento.setText(rs.getString("Complemento"));
                    txtCidade.setText(rs.getString("Cidade"));
                    txtCEP.setText(rs.getString("CEP"));
                    txtUF.setText(rs.getString("UF"));
                }

            } catch (SQLException e) {
                System.out.println("Erro ao realizar consulta: " + e.getMessage());
            } finally {
                // Desconecte do banco de dados
                conexao.desconectar();
            }
        } else {
            System.out.println("Não foi possível conectar ao banco de dados.");
        }
        //limparCampos();
    }

}
